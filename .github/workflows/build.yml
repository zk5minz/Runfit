name: Build RunFit Android App
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 수동 실행 가능

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        # cache 옵션 제거로 오류 해결
        
    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 📱 Accept Android SDK Licenses
      run: yes | sdkmanager --licenses
      
    - name: 🔧 Install Dependencies
      run: |
        npm install -g cordova@latest
        if [ -f "package.json" ]; then
          npm install
        else
          echo "No package.json found, skipping npm install"
        fi
        
    - name: 🏗️ Add Android Platform
      run: cordova platform add android
      
    - name: 🔌 Install Plugins
      run: |
        cordova plugin add cordova-plugin-whitelist
        cordova plugin add cordova-plugin-device
        cordova plugin add cordova-plugin-geolocation
        cordova plugin add cordova-plugin-dialogs
        cordova plugin add cordova-plugin-background-mode
        cordova plugin add cordova-plugin-file
        cordova plugin add cordova-plugin-vibration
        cordova plugin add cordova-plugin-network-information
        cordova plugin add cordova-plugin-statusbar
        cordova plugin add cordova-plugin-splashscreen
        
    - name: 🔨 Build Debug APK
      run: cordova build android --debug
      
    - name: 🔨 Build Release APK (unsigned)
      run: cordova build android --release
      
    - name: 📱 Build Debug AAB
      run: cordova build android --debug -- --packageType=bundle
      
    - name: 📱 Build Release AAB (unsigned)
      run: cordova build android --release -- --packageType=bundle
        
    - name: 📤 Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: RunFit-debug-apk
        path: platforms/android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: 📤 Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: RunFit-release-apk
        path: platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk
        retention-days: 30
        
    - name: 📤 Upload Debug AAB
      uses: actions/upload-artifact@v4
      with:
        name: RunFit-debug-aab
        path: platforms/android/app/build/outputs/bundle/debug/app-debug.aab
        retention-days: 30
        
    - name: 📤 Upload Release AAB
      uses: actions/upload-artifact@v4
      with:
        name: RunFit-release-aab
        path: platforms/android/app/build/outputs/bundle/release/app-release-unsigned.aab
        retention-days: 30
        
    - name: 📋 Show Build Information
      run: |
        echo "✅ 빌드 완료!"
        echo "📱 앱 이름: RunFit"
        echo "📦 버전: $(node -p "require('./package.json').version" 2>/dev/null || echo "버전 정보 없음")"
        echo "🗓️ 빌드 시간: $(date)"
        echo ""
        echo "📁 생성된 APK 파일:"
        ls -la platforms/android/app/build/outputs/apk/debug/ 2>/dev/null || echo "디버그 APK 없음"
        ls -la platforms/android/app/build/outputs/apk/release/ 2>/dev/null || echo "릴리즈 APK 없음"
        echo ""
        echo "📁 생성된 AAB 파일:"
        ls -la platforms/android/app/build/outputs/bundle/debug/ 2>/dev/null || echo "디버그 AAB 없음"
        ls -la platforms/android/app/build/outputs/bundle/release/ 2>/dev/null || echo "릴리즈 AAB 없음"
