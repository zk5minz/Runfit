name: Build RunFit App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'

    - name: Setup Java (for Android build)
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Create basic icon file
      run: |
        mkdir -p www/img
        echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg==" | base64 -d > www/img/icon.png

    - name: Install Cordova globally
      run: npm install -g cordova@12.0.0

    - name: Initialize npm
      run: |
        if [ ! -f package.json ]; then
          npm init -y
        fi
        npm install

    - name: Add Android platform
      run: cordova platform add android@12.0.0

    - name: Install plugins
      run: |
        cordova plugin add cordova-plugin-whitelist@1
        cordova plugin add cordova-plugin-device@2
        cordova plugin add cordova-plugin-geolocation@4
        cordova plugin add cordova-plugin-dialogs@2
        cordova plugin add cordova-plugin-background-mode@0.7.3
        cordova plugin add cordova-plugin-file@6
        cordova plugin add cordova-plugin-media@5
        cordova plugin add cordova-plugin-vibration@3
        cordova plugin add cordova-plugin-network-information@2
        cordova plugin add cordova-plugin-statusbar@2

    - name: Build Android APK
      run: cordova build android --release

    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk
