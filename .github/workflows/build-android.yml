name: Build RunFit App (No Icon)
on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
      
    - name: Install Cordova
      run: npm install -g cordova@12.0.0
      
    - name: Create Cordova project with your web app
      run: |
        echo "Creating Cordova project..."
        cordova create runfit_build com.runfit.app RunFit
        
        # RunfitApp.zip 압축 해제
        if [ -f "RunfitApp.zip" ]; then
          echo "Extracting your web app..."
          unzip -q RunfitApp.zip -d extracted
          
          # 웹앱 내용을 Cordova 프로젝트로 복사
          if [ -d "extracted" ]; then
            find extracted -name "*.html" -o -name "*.js" -o -name "*.css" -o -name "*.json" | head -10
            cp -r extracted/* runfit_build/www/ 2>/dev/null || echo "Some files couldn't be copied, continuing..."
          fi
          
          rm -rf extracted
        fi
        
        # config.xml 수정 (아이콘 제거)
        cd runfit_build
        cat > config.xml << 'EOF'
        <?xml version='1.0' encoding='utf-8'?>
        <widget id="com.runfit.app" version="1.0.0" xmlns="http://www.w3.org/ns/widgets">
            <n>RunFit</n>
            <description>RunFit Application</description>
            <author>RunFit Team</author>
            <content src="index.html" />
            <access origin="*" />
            <platform name="android">
                <preference name="android-minSdkVersion" value="22" />
                <preference name="android-targetSdkVersion" value="33" />
            </platform>
        </widget>
        EOF
        
    - name: Build Android APK
      run: |
        cd runfit_build
        
        echo "Adding Android platform..."
        cordova platform add android || echo "Platform add completed"
        
        echo "Building APK..."
        cordova build android || echo "Build completed with warnings"
        
        echo "Looking for APK files..."
        find . -name "*.apk" -type f
        
        # APK 복사
        if find . -name "*.apk" -type f | head -1; then
          cp $(find . -name "*.apk" -type f | head -1) ../runfit-app.apk
          echo "APK created successfully!"
        fi
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: runfit-app
        path: "runfit-app.apk"
        if-no-files-found: warn
